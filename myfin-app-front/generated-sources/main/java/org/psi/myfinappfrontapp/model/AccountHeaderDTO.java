/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.psi.myfinappfrontapp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.psi.myfinappfrontapp.model.AccountLineDTO;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AccountHeaderDTO
 */
@JsonPropertyOrder({
  AccountHeaderDTO.JSON_PROPERTY_ACCOUNT_LINES,
  AccountHeaderDTO.JSON_PROPERTY_ACCOUNT_TYPE,
  AccountHeaderDTO.JSON_PROPERTY_ID,
  AccountHeaderDTO.JSON_PROPERTY_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-08T19:30:38.128453200+01:00[Europe/Paris]", comments = "Generator version: 7.12.0")
public class AccountHeaderDTO implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ACCOUNT_LINES = "accountLines";
  @jakarta.annotation.Nullable
  private List<AccountLineDTO> accountLines = new ArrayList<>();

  /**
   * Gets or Sets accountType
   */
  public enum AccountTypeEnum {
    CTO(String.valueOf("CTO")),
    
    PEA(String.valueOf("PEA")),
    
    PEAPME(String.valueOf("PEAPME")),
    
    ASSURVIE(String.valueOf("ASSURVIE")),
    
    EPARGNESALARIALE(String.valueOf("EPARGNESALARIALE"));

    private String value;

    AccountTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccountTypeEnum fromValue(String value) {
      for (AccountTypeEnum b : AccountTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACCOUNT_TYPE = "accountType";
  @jakarta.annotation.Nullable
  private AccountTypeEnum accountType;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable
  private String name;

  public AccountHeaderDTO() {
  }

  public AccountHeaderDTO accountLines(@jakarta.annotation.Nullable List<AccountLineDTO> accountLines) {
    
    this.accountLines = accountLines;
    return this;
  }

  public AccountHeaderDTO addAccountLinesItem(AccountLineDTO accountLinesItem) {
    if (this.accountLines == null) {
      this.accountLines = new ArrayList<>();
    }
    this.accountLines.add(accountLinesItem);
    return this;
  }

  /**
   * Get accountLines
   * @return accountLines
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_LINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AccountLineDTO> getAccountLines() {
    return accountLines;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_LINES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountLines(@jakarta.annotation.Nullable List<AccountLineDTO> accountLines) {
    this.accountLines = accountLines;
  }

  public AccountHeaderDTO accountType(@jakarta.annotation.Nullable AccountTypeEnum accountType) {
    
    this.accountType = accountType;
    return this;
  }

  /**
   * Get accountType
   * @return accountType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountTypeEnum getAccountType() {
    return accountType;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountType(@jakarta.annotation.Nullable AccountTypeEnum accountType) {
    this.accountType = accountType;
  }

  public AccountHeaderDTO id(@jakarta.annotation.Nullable Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable Long id) {
    this.id = id;
  }

  public AccountHeaderDTO name(@jakarta.annotation.Nullable String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountHeaderDTO accountHeaderDTO = (AccountHeaderDTO) o;
    return Objects.equals(this.accountLines, accountHeaderDTO.accountLines) &&
        Objects.equals(this.accountType, accountHeaderDTO.accountType) &&
        Objects.equals(this.id, accountHeaderDTO.id) &&
        Objects.equals(this.name, accountHeaderDTO.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountLines, accountType, id, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountHeaderDTO {\n");
    sb.append("    accountLines: ").append(toIndentedString(accountLines)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

